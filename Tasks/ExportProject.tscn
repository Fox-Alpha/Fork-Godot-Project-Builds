[gd_scene load_steps=4 format=3 uid="uid://m4tjlhu18ode"]

[ext_resource type="Script" path="res://Nodes/GUI/Disablabler.gd" id="1_e328v"]
[ext_resource type="PackedScene" uid="uid://cyl1d6reu3mk4" path="res://Nodes/GUI/DirectorySelector.tscn" id="1_ftqqe"]

[sub_resource type="GDScript" id="GDScript_mlhhy"]
script/source = "extends \"res://Tasks/ExportTask.gd\"

@onready var preset_list: OptionButton = %PresetList
@onready var custom_preset_name: LineEdit = %CustomPresetName
@onready var debug: CheckBox = %Debug
@onready var custom_path: Control = $CustomPath
## TODO: export_path

func _get_task_name() -> String:
	return \"Export Project\"

func _get_command() -> String:
	return \"%godot%\"

func _get_arguments() -> PackedStringArray:
	var ret: PackedStringArray
	ret.append(\"--headless\")
	
	ret.append(\"--path\")
	ret.append(Data.project_path)
	
	if debug.button_pressed:
		ret.append(\"--export-debug\")
	else:
		ret.append(\"--export-release\")
	
	if preset_list.selected == 0:
		ret.append(custom_preset_name.text)
	else:
		ret.append(preset_list.get_item_text(preset_list.selected))
	
	if not custom_path.text.is_empty():
		ret.append(custom_path.text)
	
	return ret

func _initialize(project_path: String):
	super(project_path)
	
	preset_list.add_item(\"Custom\")
	
	var export_presets := load_presets()
	if not export_presets:
		return
	
	for section in export_presets.get_sections():
		if section.ends_with(\"options\"):
			continue
		
		preset_list.add_item(export_presets.get_value(section, \"name\"))

func _load():
	var preset_text: String = data[\"preset\"]
	var preset_assigned: bool
	for i in preset_list.item_count:
		if preset_list.get_item_text(i) == preset_text:
			preset_list.selected = i
			preset_assigned = true
			break
	
	if not preset_assigned:
		preset_list.selected = 0
		custom_path.text = preset_text
	
	_on_preset_list_item_selected(preset_list.selected)
	
	debug.button_pressed = data[\"debug\"]
	custom_path.text = data[\"custom_path\"]

func _store():
	if preset_list.selected == 0:
		data[\"preset\"] = custom_preset_name.text
	else:
		data[\"preset\"] = preset_list.get_item_text(preset_list.selected)
	data[\"debug\"] = debug.button_pressed
	data[\"custom_path\"] = custom_path.text

func _on_preset_list_item_selected(index: int) -> void:
	custom_preset_name.set_noexist(index != 0)
"

[node name="ExportProject" type="VBoxContainer"]
script = SubResource("GDScript_mlhhy")

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 2
alignment = 1

[node name="Label" type="Label" parent="HBoxContainer"]
layout_mode = 2
text = "Select Preset"

[node name="PresetList" type="OptionButton" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2

[node name="HBoxContainer2" type="HBoxContainer" parent="."]
layout_mode = 2

[node name="Control" type="Control" parent="HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3

[node name="CustomPresetName" type="LineEdit" parent="HBoxContainer2"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 2.0
placeholder_text = "Preset Name"
script = ExtResource("1_e328v")

[node name="Control2" type="Control" parent="HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Debug" type="CheckBox" parent="."]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
text = "Debug"

[node name="Label" type="Label" parent="."]
layout_mode = 2
text = "Custom Path"
horizontal_alignment = 1

[node name="CustomPath" parent="." instance=ExtResource("1_ftqqe")]
layout_mode = 2

[connection signal="item_selected" from="HBoxContainer/PresetList" to="." method="_on_preset_list_item_selected"]
