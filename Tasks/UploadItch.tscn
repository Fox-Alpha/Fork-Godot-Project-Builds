[gd_scene load_steps=3 format=3 uid="uid://xt4wel0slqe4"]

[ext_resource type="PackedScene" uid="uid://cyl1d6reu3mk4" path="res://Nodes/GUI/DirectorySelector.tscn" id="1_qoq5m"]

[sub_resource type="GDScript" id="GDScript_5kvo4"]
script/source = "extends Task

@onready var source_folder: Control = %SourceFolder
@onready var channel: LineEdit = %Channel

func _get_task_name() -> String:
	return \"Upload Itch\"

func _get_execute_string() -> String:
	return \"Itch Upload (Channel: \\\"%s\\\")\" % channel.text

func _initialize() -> void:
	defaults[\"source_folder\"] = \"\"
	defaults[\"channel\"] = \"\"

func _prevalidate() -> bool:
	var butler_path: String = Data.global_config[\"itch_butler_path\"]
	if butler_path.is_empty():
		error_message = \"Butler path is empty.\"
	elif not FileAccess.file_exists(butler_path):
		error_message = \"Butler path does not point to any file.\"
	#else: ## TODO: This won't work until OS.execute() is better.
		#var output: Array
		#OS.execute(butler_path, [\"login\"], output)
		#if output.is_empty() or output[0] != \"Your local credentials are valid!\":
			#error_message = \"Butler executable invalid or user not logged in.\"
			#return false
	
	return error_message.is_empty()

func _validate() -> bool:
	if not DirAccess.dir_exists_absolute(Data.project_path.path_join(source_folder.text)):
		error_message = \"The provided source directory does not exist.\"
		return false
	return true

func _get_command() -> String:
	return Data.global_config[\"itch_butler_path\"]

func _get_arguments() -> PackedStringArray:
	var ret: PackedStringArray
	
	ret.append(\"push\")
	ret.append(Data.project_path.path_join(source_folder.text))
	
	var username: String = Data.global_config[\"itch_username\"]
	var game_name: String = Data.local_config[\"itch_game_name\"]
	var channel_name: String = channel.text
	if channel_name.is_empty():
		channel_name = Data.local_config[\"itch_default_channel\"]
	
	ret.append(\"%s/%s:%s\" % [username, game_name, channel_name])
	
	return ret

func _load():
	source_folder.text =  data[\"source_folder\"]
	channel.text =  data[\"channel\"]

func _store():
	data[\"source_folder\"] = source_folder.text
	data[\"channel\"] = channel.text

func _get_task_info() -> PackedStringArray:
	return [
		\"Uploads files to itch.io using butler. Remember to setup (login) butler before using this option.\",
		\"Source Folder|The folder that will be provided for butler. It is automatically packed into ZIP before upload.\",
		\"Channel|Channel to which the file will be uploaded.\",## mo≈ºe channel list w lokalnej konfiguracji?
	]
"

[node name="UploadItch" type="HBoxContainer"]
offset_right = 536.0
offset_bottom = 66.0
script = SubResource("GDScript_5kvo4")

[node name="Control" type="Control" parent="."]
layout_mode = 2
size_flags_horizontal = 3

[node name="GridContainer" type="GridContainer" parent="."]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 4.0
columns = 2

[node name="Label" type="Label" parent="GridContainer"]
layout_mode = 2
text = "Source Folder"
horizontal_alignment = 2

[node name="SourceFolder" parent="GridContainer" instance=ExtResource("1_qoq5m")]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
scope = 1

[node name="Label2" type="Label" parent="GridContainer"]
auto_translate_mode = 1
layout_mode = 2
text = "Channel"
horizontal_alignment = 2

[node name="Channel" type="LineEdit" parent="GridContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3

[node name="Control2" type="Control" parent="."]
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 3
