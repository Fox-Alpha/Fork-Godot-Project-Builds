[gd_scene load_steps=2 format=3 uid="uid://b7iec2eyiepn8"]

[sub_resource type="GDScript" id="GDScript_ftiq7"]
script/source = "extends Task

@onready var vdf_file: OptionButton = %VDFFile

static var vdf_list: PackedStringArray

func _init() -> void:
	has_static_configuration = true

func _get_task_name() -> String:
	return \"Upload Steam\"

func _get_execute_string() -> String:
	return \"Steam Build (%s)\" % vdf_file.text

static func _initialize_project():
	vdf_list.clear()

static func _process_file(file: String):
	if file.get_extension() != \"vdf\":
		return
	
	var f := FileAccess.open(file, FileAccess.READ)
	for line in f.get_as_text().split(\"\\n\"):
		if line.contains(\"AppBuild\"):
			vdf_list.append(file.trim_prefix(Data.project_path + \"/\"))
			break

func _initialize():
	for file in vdf_list:
		vdf_file.add_item(file.get_file())
		vdf_file.set_item_metadata(-1, file)
		vdf_file.set_item_tooltip(-1, file)

func _get_command() -> String:
	return Data.global_config.get(\"steam_cmd_path\", \"\")

func _get_arguments() -> PackedStringArray:
	var ret: PackedStringArray
	
	ret.append(\"+login\")
	ret.append(Data.global_config.get(\"steam_username\", \"\"))
	ret.append(Data.global_config.get(\"steam_password\", \"\"))
	
	ret.append(\"+run_app_build\")
	ret.append(Data.project_path.path_join(vdf_file.get_selected_metadata()))
	
	ret.append(\"+quit\")
	
	return ret

func _load():
	var file: String = data[\"vdf_path\"]
	
	for i in vdf_file.item_count:
		if vdf_file.get_item_metadata(i) == file:
			vdf_file.selected = i
			break

func _store():
	data[\"vdf_path\"] = vdf_file.get_selected_metadata()

func _get_task_info() -> PackedStringArray:
	return [
		\"Uploads files to Steam based on the given VDF file, using steamcmd.exe.\",
		\"VDF File|File used as a base to upload. Only \\\"non-simple\\\" VDF files are supported.\",
	]

func get_global_content_path() -> String:
	var content_root: String = Data.local_config.get(\"steam_content_root\", \"\")
	return Data.project_path.path_join(content_root)
"

[node name="UploadSteam" type="HBoxContainer"]
offset_right = 522.0
offset_bottom = 23.0
script = SubResource("GDScript_ftiq7")

[node name="Control" type="Control" parent="."]
layout_mode = 2
size_flags_horizontal = 3

[node name="HBoxContainer" type="HBoxContainer" parent="."]
layout_mode = 2
size_flags_horizontal = 3
size_flags_stretch_ratio = 8.0
alignment = 1

[node name="Label" type="Label" parent="HBoxContainer"]
layout_mode = 2
text = "VDF File"
horizontal_alignment = 2

[node name="VDFFile" type="OptionButton" parent="HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3

[node name="Control2" type="Control" parent="."]
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 3
