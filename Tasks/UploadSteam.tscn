[gd_scene load_steps=2 format=3 uid="uid://b7iec2eyiepn8"]

[sub_resource type="GDScript" id="GDScript_ftiq7"]
script/source = "extends Task

@onready var vdf_file: LineEdit = %VDFFile

func _get_task_name() -> String:
	return \"Upload Steam\"

func _get_execute_string() -> String:
	return \"Steam Build (%s)\" % vdf_file.text.get_file()

func _get_command() -> String:
	return Data.global_config.get(\"steam_cmd_path\")

func _get_arguments() -> PackedStringArray:
	var ret: PackedStringArray
	
	ret.append(\"+login\")
	ret.append(Data.global_config.get(\"steam_username\", \"\"))
	ret.append(Data.global_config.get(\"steam_password\", \"\"))
	
	ret.append(\"+run_app_build\")
	ret.append(ProjectSettings.globalize_path(get_temp_vdf_path()))
	
	ret.append(\"+quit\")
	
	return ret

func _prepare() -> void:
	var vdf_file_path := Data.project_path.path_join(vdf_file.text)
	var vdf_file_dir := vdf_file_path.get_base_dir()
	
	var app_build_lines := FileAccess.open(vdf_file_path, FileAccess.READ).get_as_text().split(\"\\n\")
	
	for i in app_build_lines.size():
		var line := app_build_lines[i]
		
		if line.contains(\"ContentRoot\"):
			line = line.replace(\"%s\", get_global_content_path())
			app_build_lines[i] = line
		elif line.contains(\"BuildOutput\"):
			line = line.replace(\"%s\", Data.global_config.get(\"steam_output\"))
			app_build_lines[i] = line
		elif line.contains(\"DEP\\\"\"):
			var j := line.find(\"DEP\\\"\") + 4
			var k := line.find(\"\\\"\", j)
			var depot_name := line.substr(j, k - j)
			
			line = str(line.substr(0, j - 4), \"\\\"\", vdf_file_dir.path_join(depot_name), \"\\\"\")
			app_build_lines[i] = line
	
	var temp_vdf := FileAccess.open(get_temp_vdf_path(), FileAccess.WRITE)
	temp_vdf.store_string(\"\\n\".join(app_build_lines))

func _initialize(project_path: String):
	super(project_path)
	## TODO: szukaÄ‡ VDF

func _load():
	vdf_file.text = data[\"vdf_path\"]

func _store():
	data[\"vdf_path\"] = vdf_file.text

func get_global_content_path() -> String:
	var content_root: String = Data.local_config.get(\"steam_content_root\", \"\")
	return Data.project_path.path_join(content_root)

func get_temp_vdf_path() -> String:
	return \"user://BuildSteam.vdf\"
"

[node name="UploadSteam" type="VBoxContainer"]
offset_right = 272.0
offset_bottom = 58.0
script = SubResource("GDScript_ftiq7")

[node name="Label" type="Label" parent="."]
layout_mode = 2
text = "VDF File"
horizontal_alignment = 1

[node name="VDFFile" type="LineEdit" parent="."]
unique_name_in_owner = true
layout_mode = 2
